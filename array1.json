[
  {
    "day": 1,
    "topic": "Array Traversal",
    "content": [
      {
        "concept": "Basic Traversal",
        "about": "Iterating through all elements in an array.",
        "problem": {
          "title": "Sum of Array",
          "description": "Given an array of integers, return the sum of all elements.",
          "input": "An integer array nums of length n.",
          "output": "Single integer representing the sum of all elements.",
          "examples": [
            { "input": "[1, 2, 3, 4]", "output": "10" },
            { "input": "[-1, 0, 5]", "output": "4" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/running-sum-of-1d-array/"
      }
    ]
  },
  {
    "day": 2,
    "topic": "Index-based Access",
    "content": [
      {
        "concept": "Indexing & Bounds",
        "about": "Accessing and validating elements via indices.",
        "problem": {
          "title": "Element at Index",
          "description": "Given an array and an index, return the element or -1 if out of bounds.",
          "input": "Array nums and integer index i.",
          "output": "Element at nums[i] or -1.",
          "examples": [
            { "input": "nums=[5,3,7], i=1", "output": "3" },
            { "input": "nums=[5,3,7], i=5", "output": "-1" }
          ]
        },
        "practice_que": "https://www.geeksforgeeks.org/access-elements-of-array/"
      }
    ]
  },
  {
    "day": 3,
    "topic": "Linear Search",
    "content": [
      {
        "concept": "Linear Search",
        "about": "Sequentially checking each element for a target value.",
        "problem": {
          "title": "Find Target",
          "description": "Given an array and a target value, return the first index of target or -1.",
          "input": "Array nums and integer target.",
          "output": "Index of target or -1.",
          "examples": [
            { "input": "nums=[4,2,6,7], target=6", "output": "2" },
            { "input": "nums=[4,2,6,7], target=3", "output": "-1" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/linear-search/"
      }
    ]
  },
  {
    "day": 4,
    "topic": "Two Pointer Technique",
    "content": [
      {
        "concept": "Two-pointer on sorted array",
        "about": "Using two indices to search pairs meeting criteria.",
        "problem": {
          "title": "Two Sum II - Input array is sorted",
          "description": "Given a sorted array of integers, find two numbers such that they add up to a specific target.",
          "input": "Sorted integer array and integer target.",
          "output": "Indices of the two numbers (1-based).",
          "examples": [
            { "input": "nums=[2,3,4], target=6", "output": "[1,3]" },
            { "input": "nums=[2,7,11,15], target=9", "output": "[1,2]" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/"
      }
    ]
  },
  {
    "day": 5,
    "topic": "Reverse Traversal",
    "content": [
      {
        "concept": "Reverse Iteration",
        "about": "Iterating from end to start.",
        "problem": {
          "title": "Reverse Array",
          "description": "Reverse the elements of an array in-place.",
          "input": "Array nums.",
          "output": "Reversed array nums.",
          "examples": [
            { "input": "[1,2,3,4]", "output": "[4,3,2,1]" },
            { "input": "[5,4,6]", "output": "[6,4,5]" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/reverse-string/"
      }
    ]
  },
  {
    "day": 6,
    "topic": "Sorting - Selection",
    "content": [
      {
        "concept": "Selection Sort",
        "about": "Selecting minimum repeatedly to build sorted array.",
        "problem": {
          "title": "Implement Selection Sort",
          "description": "Sort an array using selection sort algorithm.",
          "input": "Unsorted integer array.",
          "output": "Sorted integer array in ascending order.",
          "examples": [
            { "input": "[64,25,12,22,11]", "output": "[11,12,22,25,64]" },
            { "input": "[5,2,9,1]", "output": "[1,2,5,9]" }
          ]
        },
        "practice_que": "https://www.geeksforgeeks.org/selection-sort/"
      }
    ]
  },
  {
    "day": 7,
    "topic": "Sorting - Insertion",
    "content": [
      {
        "concept": "Insertion Sort",
        "about": "Building sorted section by inserting next element.",
        "problem": {
          "title": "Implement Insertion Sort",
          "description": "Sort an array using insertion sort algorithm.",
          "input": "Unsorted integer array.",
          "output": "Sorted integer array in ascending order.",
          "examples": [
            { "input": "[12,11,13,5,6]", "output": "[5,6,11,12,13]" },
            { "input": "[3,1,2]", "output": "[1,2,3]" }
          ]
        },
        "practice_que": "https://www.geeksforgeeks.org/insertion-sort/"
      }
    ]
  },
  {
    "day": 8,
    "topic": "Prefix Sum",
    "content": [
      {
        "concept": "Prefix Sum Array",
        "about": "Computing cumulative sums to answer range queries fast.",
        "problem": {
          "title": "Range Sum Query â€“ Immutable",
          "description": "Given an integer array, compute sum of elements between indices i and j inclusive.",
          "input": "Array nums, queries of i and j.",
          "output": "Sum for each query.",
          "examples": [
            { "input": "nums=[-2,0,3,-5,2,-1], i=0,j=2", "output": "1" },
            { "input": "nums=[-2,0,3,-5,2,-1], i=2,j=5", "output": "-1" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/range-sum-query-immutable/"
      }
    ]
  },
  {
    "day": 9,
    "topic": "Sliding Window - Fixed",
    "content": [
      {
        "concept": "Fixed-size Sliding Window",
        "about": "Compute metrics on subarrays of fixed length.",
        "problem": {
          "title": "Maximum Subarray Sum of Size K",
          "description": "Given an array and integer k, find max sum of any subarray of length k.",
          "input": "Array nums and integer k.",
          "output": "Maximum sum integer.",
          "examples": [
            { "input": "nums=[2,1,5,1,3,2], k=3", "output": "9" },
            { "input": "[2,3,4,1,5], k=2", "output": "7" }
          ]
        },
        "practice_que": "https://www.geeksforgeeks.org/sliding-window-maximum-of-all-subarrays-of-size-k/"
      }
    ]
  },
  {
    "day": 10,
    "topic": "Sliding Window - Variable",
    "content": [
      {
        "concept": "Variable-size Sliding Window",
        "about": "Adjust window size to satisfy conditions.",
        "problem": {
          "title": "Subarray Product Less Than K",
          "description": "Count subarrays where product of elements is less than k.",
          "input": "Array nums and integer k.",
          "output": "Count of qualifying subarrays.",
          "examples": [
            { "input": "nums=[10,5,2,6], k=100", "output": "8" },
            { "input": "[1,2,3], k=0", "output": "0" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/subarray-product-less-than-k/"
      }
    ]
  },
  {
    "day": 11,
    "topic": "Two-pointer Partition",
    "content": [
      {
        "concept": "Dutch National Flag",
        "about": "Partitioning array into three parts based on pivot.",
        "problem": {
          "title": "Sort Colors",
          "description": "Given an array with values 0,1,2, sort them without extra space.",
          "input": "Array nums with 0s,1s,2s.",
          "output": "Sorted array with all 0s, then 1s then 2s.",
          "examples": [
            { "input": "[2,0,2,1,1,0]", "output": "[0,0,1,1,2,2]" },
            { "input": "[2,2,1,0]", "output": "[0,1,2,2]" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/sort-colors/"
      }
    ]
  },
  {
    "day": 12,
    "topic": "Binary Search",
    "content": [
      {
        "concept": "Binary Search in Sorted Array",
        "about": "Divide and conquer to find element in log(n) time.",
        "problem": {
          "title": "Binary Search",
          "description": "Given sorted array and target value, return index or -1.",
          "input": "Sorted array nums and integer target.",
          "output": "Index of target or -1.",
          "examples": [
            { "input": "nums=[-1,0,3,5,9,12], target=9", "output": "4" },
            { "input": "nums=[-1,0,3,5,9,12], target=2", "output": "-1" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/binary-search/"
      }
    ]
  },
  {
    "day": 13,
    "topic": "Merge Two Sorted Arrays",
    "content": [
      {
        "concept": "Merge Technique",
        "about": "Merging two sorted arrays into one sorted result.",
        "problem": {
          "title": "Merge Sorted Array",
          "description": "Merge array nums2 into nums1 as one sorted array.",
          "input": "Two arrays nums1 (with extra space) and nums2, with sizes m and n.",
          "output": "nums1 becomes merged sorted array.",
          "examples": [
            { "input": "nums1=[1,2,3,0,0,0], m=3; nums2=[2,5,6], n=3", "output": "[1,2,2,3,5,6]" },
            { "input": "nums1=[0], m=0; nums2=[1], n=1", "output": "[1]" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/merge-sorted-array/"
      }
    ]
  },
  {
    "day": 14,
    "topic": "Matrix as Array",
    "content": [
      {
        "concept": "Flatten 2D Array",
        "about": "Treating 2D matrix via single index mapping.",
        "problem": {
          "title": "Reshape the Matrix",
          "description": "Given a 2D array and reshape dimensions r and c, return reshaped matrix or original if not possible.",
          "input": "Matrix nums and dimensions r and c.",
          "output": "Reshaped matrix or original.",
          "examples": [
            { "input": "[[1,2],[3,4]], r=1, c=4", "output": "[[1,2,3,4]]" },
            { "input": "[[1,2],[3,4]], r=2, c=4", "output": "[[1,2],[3,4]]" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/reshape-the-matrix/"
      }
    ]
  },
  {
    "day": 15,
    "topic": "Advanced: Subarray Algorithms",
    "content": [
      {
        "concept": "Kadane's Algorithm",
        "about": "Finding maximum subarray sum in O(n).",
        "problem": {
          "title": "Maximum Subarray",
          "description": "Given an integer array, find the contiguous subarray with the largest sum and return its sum.",
          "input": "Integer array nums.",
          "output": "Maximum sum of any contiguous subarray.",
          "examples": [
            { "input": "[-2,1,-3,4,-1,2,1,-5,4]", "output": "6" },
            { "input": "[1]", "output": "1" }
          ]
        },
        "practice_que": "https://leetcode.com/problems/maximum-subarray/"
      }
    ]
  }
]
